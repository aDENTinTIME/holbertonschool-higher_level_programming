>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> from subprocess import call
>>> try:
...     call(["pep8", "2-matrix_divided.py"])
... except FileNotFoundError:
...     print(0)
0

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided(matrix, 3)[0][0]
0.33

>>> try:
...     matrix_divided(2, 5)
... except TypeError as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> try:
...     matrix_divided(2, "salsa")
... except TypeError as e:
...     print(e)
div must be a number

>>> try:
...     matrix_divided(matrix, 0)
... except ZeroDivisionError as e:
...     print(e)
division by zero

>>> matrix = [
...     [1, "grape", 3],
...     [4, 5, 6]
... ]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, (3, 6)]
... ]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as e:
...     print(e)
matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6, 7]
... ]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as e:
...     print(e)
Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6],
...     [24, 54, 66, 78]
... ]
>>> try:
...     matrix_divided(matrix, 2)
... except TypeError as e:
...     print(e)
Each row of the matrix must have the same size
